<?xml version="1.0"?>
<launch>
    <arg name="port" default="$(optenv HUSKY_PORT /dev/ttyUSB3)" />

    <!-- Husky harware driver -->
    <node pkg="husky_base" type="husky_node" name="husky_node">
        <rosparam subst_value="true">
            port: $(arg port)

            control_frequency: 10.0
            diagnostic_frequency: 1.0

            max_acceleration: 3.0
            max_speed: 1.0
            wheel_diameter: 0.3302
            polling_timeout: 10.0
        </rosparam>
    </node>

  
  <arg name="robot_namespace" default="$(optenv ROBOT_NAMESPACE robot)"/>
  <arg name="enable_ekf" default="$(optenv ENABLE_EKF true)"/>

  <arg name="config_extras"
       default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>

  <include file="$(find husky_description)/launch/description.launch" >
    <arg name="laser_enabled" default="false"/>
    <arg name="realsense_enabled" default="false"/>
    <arg name="urdf_extras" default=""/>
  </include>

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />

  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="husky_joint_publisher husky_velocity_controller"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


  <!-- Override the default control parameters, see config/empty.yaml for default. -->
  <rosparam command="load" file="$(arg config_extras)" />

    <!-- Diagnostic Aggregator -->
    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find husky_base)/config/diagnostics.yaml"/>
    </node>

</launch>
